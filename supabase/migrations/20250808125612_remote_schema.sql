

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";






CREATE OR REPLACE FUNCTION "public"."create_public_profile_for_new_user"() RETURNS "trigger"
    LANGUAGE "plpgsql" SECURITY DEFINER
    SET "search_path" TO 'public'
    AS $$
begin
  insert into public.profiles (id, display_name)
  values (new.id, new.raw_user_meta_data->>'display_name');
  return new;
end;
$$;


ALTER FUNCTION "public"."create_public_profile_for_new_user"() OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."block" (
    "id" bigint NOT NULL,
    "name" character varying NOT NULL,
    "planned_start_date" "date" NOT NULL,
    "planned_end_date" "date" NOT NULL,
    "block_type_id" bigint NOT NULL,
    "description" "text",
    "coach_comment" "text",
    "athlete_comment" "text",
    "athlete_id" "uuid" NOT NULL,
    "coach_id" "uuid" NOT NULL
);


ALTER TABLE "public"."block" OWNER TO "postgres";


ALTER TABLE "public"."block" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."block_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."block_type" (
    "id" bigint NOT NULL,
    "name" character varying NOT NULL
);


ALTER TABLE "public"."block_type" OWNER TO "postgres";


ALTER TABLE "public"."block_type" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."block_type_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."coach_athlete" (
    "coach_id" "uuid" NOT NULL,
    "athlete_id" "uuid" NOT NULL
);


ALTER TABLE "public"."coach_athlete" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."exercise" (
    "id" bigint NOT NULL,
    "name" character varying NOT NULL,
    "exercise_type_id" bigint NOT NULL
);


ALTER TABLE "public"."exercise" OWNER TO "postgres";


ALTER TABLE "public"."exercise" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."exercise_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."exercise_muscle_group" (
    "exercise_id" bigint NOT NULL,
    "muscle_group_id" bigint NOT NULL
);


ALTER TABLE "public"."exercise_muscle_group" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."exercise_type" (
    "id" bigint NOT NULL,
    "name" character varying NOT NULL
);


ALTER TABLE "public"."exercise_type" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."muscle_group" (
    "id" bigint NOT NULL,
    "name" character varying NOT NULL
);


ALTER TABLE "public"."muscle_group" OWNER TO "postgres";


ALTER TABLE "public"."muscle_group" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."exercise_type_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE "public"."exercise_type" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."exercise_type_id_seq1"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."profile" (
    "id" "uuid" NOT NULL,
    "display_name" character varying NOT NULL
);


ALTER TABLE "public"."profile" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."set" (
    "id" bigint NOT NULL,
    "training_exercise_id" bigint NOT NULL,
    "set_type_id" bigint NOT NULL,
    "optional" boolean DEFAULT false NOT NULL,
    "order" smallint NOT NULL,
    "min_reps" smallint,
    "max_reps" smallint,
    "actual_reps" smallint,
    "min_weight" numeric,
    "max_weight" numeric,
    "actual_weight" numeric,
    "min_rpe" numeric,
    "max_rpe" numeric,
    "actual_rpe" numeric,
    "min_duration" smallint,
    "max_duration" smallint,
    "actual_duration" smallint,
    "min_percentage" numeric,
    "max_percentage" numeric,
    "description" "text",
    "coach_comment" "text",
    "athlete_comment" "text",
    "completed" boolean DEFAULT false NOT NULL
);


ALTER TABLE "public"."set" OWNER TO "postgres";


ALTER TABLE "public"."set" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."set_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."set_type" (
    "id" bigint NOT NULL,
    "name" character varying NOT NULL
);


ALTER TABLE "public"."set_type" OWNER TO "postgres";


ALTER TABLE "public"."set_type" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."set_type_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."training" (
    "id" bigint NOT NULL,
    "block_id" bigint NOT NULL,
    "planned_date" "date" NOT NULL,
    "actual_date" "date",
    "start_time" timestamp without time zone,
    "end_time" timestamp without time zone,
    "description" "text",
    "coach_comment" "text",
    "athlete_comment" "text"
);


ALTER TABLE "public"."training" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."training_exercise" (
    "id" bigint NOT NULL,
    "training_id" bigint NOT NULL,
    "exercise_id" bigint NOT NULL,
    "order" smallint NOT NULL,
    "description" "text",
    "coach_comment" "text",
    "athlete_comment" "text",
    "optional" boolean DEFAULT false NOT NULL
);


ALTER TABLE "public"."training_exercise" OWNER TO "postgres";


ALTER TABLE "public"."training_exercise" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."training_exercise_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE "public"."training" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."training_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE ONLY "public"."block"
    ADD CONSTRAINT "block_name_key" UNIQUE ("name");



ALTER TABLE ONLY "public"."block"
    ADD CONSTRAINT "block_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."block_type"
    ADD CONSTRAINT "block_type_name_key" UNIQUE ("name");



ALTER TABLE ONLY "public"."block_type"
    ADD CONSTRAINT "block_type_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."coach_athlete"
    ADD CONSTRAINT "coach_athlete_pkey" PRIMARY KEY ("coach_id", "athlete_id");



ALTER TABLE ONLY "public"."exercise_muscle_group"
    ADD CONSTRAINT "exercise_muscle_group_pkey" PRIMARY KEY ("exercise_id", "muscle_group_id");



ALTER TABLE ONLY "public"."exercise"
    ADD CONSTRAINT "exercise_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."exercise_type"
    ADD CONSTRAINT "exercise_type_name_key" UNIQUE ("name");



ALTER TABLE ONLY "public"."muscle_group"
    ADD CONSTRAINT "exercise_type_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."exercise_type"
    ADD CONSTRAINT "exercise_type_pkey1" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."muscle_group"
    ADD CONSTRAINT "muscle_group_name_key" UNIQUE ("name");



ALTER TABLE ONLY "public"."profile"
    ADD CONSTRAINT "profiles_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."set"
    ADD CONSTRAINT "set_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."set_type"
    ADD CONSTRAINT "set_type_name_key" UNIQUE ("name");



ALTER TABLE ONLY "public"."set_type"
    ADD CONSTRAINT "set_type_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."training_exercise"
    ADD CONSTRAINT "training_exercise_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."training"
    ADD CONSTRAINT "training_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."block"
    ADD CONSTRAINT "block_athlete_id_fkey" FOREIGN KEY ("athlete_id") REFERENCES "public"."profile"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."block"
    ADD CONSTRAINT "block_block_type_id_fkey" FOREIGN KEY ("block_type_id") REFERENCES "public"."block_type"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."block"
    ADD CONSTRAINT "block_coach_id_fkey" FOREIGN KEY ("coach_id") REFERENCES "public"."profile"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."coach_athlete"
    ADD CONSTRAINT "coach_athlete_athlete_id_fkey" FOREIGN KEY ("athlete_id") REFERENCES "public"."profile"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."coach_athlete"
    ADD CONSTRAINT "coach_athlete_coach_id_fkey" FOREIGN KEY ("coach_id") REFERENCES "public"."profile"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."exercise"
    ADD CONSTRAINT "exercise_exercise_type_id_fkey" FOREIGN KEY ("exercise_type_id") REFERENCES "public"."exercise_type"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."exercise_muscle_group"
    ADD CONSTRAINT "exercise_muscle_group_exercise_id_fkey" FOREIGN KEY ("exercise_id") REFERENCES "public"."exercise"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."exercise_muscle_group"
    ADD CONSTRAINT "exercise_muscle_group_muscle_group_id_fkey" FOREIGN KEY ("muscle_group_id") REFERENCES "public"."muscle_group"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."profile"
    ADD CONSTRAINT "profiles_id_fkey" FOREIGN KEY ("id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."set"
    ADD CONSTRAINT "set_set_type_id_fkey" FOREIGN KEY ("set_type_id") REFERENCES "public"."set_type"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."set"
    ADD CONSTRAINT "set_training_exercise_id_fkey" FOREIGN KEY ("training_exercise_id") REFERENCES "public"."training_exercise"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."training"
    ADD CONSTRAINT "training_block_id_fkey" FOREIGN KEY ("block_id") REFERENCES "public"."block"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."training_exercise"
    ADD CONSTRAINT "training_exercise_exercise_id_fkey" FOREIGN KEY ("exercise_id") REFERENCES "public"."exercise"("id") ON UPDATE CASCADE ON DELETE RESTRICT;



ALTER TABLE ONLY "public"."training_exercise"
    ADD CONSTRAINT "training_exercise_training_id_fkey" FOREIGN KEY ("training_id") REFERENCES "public"."training"("id") ON UPDATE CASCADE ON DELETE CASCADE;



CREATE POLICY "Coaches can add athletes" ON "public"."coach_athlete" FOR INSERT WITH CHECK ((( SELECT "auth"."uid"() AS "uid") = "coach_id"));



CREATE POLICY "Enable read access for all users" ON "public"."block_type" FOR SELECT USING ((( SELECT "auth"."role"() AS "role") = 'authenticated'::"text"));



CREATE POLICY "Enable users to view their own data only" ON "public"."profile" FOR SELECT TO "authenticated" USING ((( SELECT "auth"."uid"() AS "uid") = "id"));



CREATE POLICY "allow athletes and coaches to view their blocks" ON "public"."block" FOR SELECT USING (((( SELECT "auth"."uid"() AS "uid") = "athlete_id") OR (( SELECT "auth"."uid"() AS "uid") = "coach_id")));



CREATE POLICY "allow users to delete their own data" ON "public"."coach_athlete" FOR DELETE USING (((( SELECT "auth"."uid"() AS "uid") = "coach_id") OR (( SELECT "auth"."uid"() AS "uid") = "athlete_id")));



ALTER TABLE "public"."block" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."block_type" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."coach_athlete" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."exercise" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."exercise_muscle_group" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."exercise_type" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."muscle_group" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."profile" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."set" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."set_type" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."training" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."training_exercise" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "users can query their own data" ON "public"."coach_athlete" FOR SELECT USING (((( SELECT "auth"."uid"() AS "uid") = "coach_id") OR (( SELECT "auth"."uid"() AS "uid") = "athlete_id")));





ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

























































































































































GRANT ALL ON FUNCTION "public"."create_public_profile_for_new_user"() TO "anon";
GRANT ALL ON FUNCTION "public"."create_public_profile_for_new_user"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."create_public_profile_for_new_user"() TO "service_role";


















GRANT ALL ON TABLE "public"."block" TO "anon";
GRANT ALL ON TABLE "public"."block" TO "authenticated";
GRANT ALL ON TABLE "public"."block" TO "service_role";



GRANT ALL ON SEQUENCE "public"."block_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."block_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."block_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."block_type" TO "anon";
GRANT ALL ON TABLE "public"."block_type" TO "authenticated";
GRANT ALL ON TABLE "public"."block_type" TO "service_role";



GRANT ALL ON SEQUENCE "public"."block_type_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."block_type_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."block_type_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."coach_athlete" TO "anon";
GRANT ALL ON TABLE "public"."coach_athlete" TO "authenticated";
GRANT ALL ON TABLE "public"."coach_athlete" TO "service_role";



GRANT ALL ON TABLE "public"."exercise" TO "anon";
GRANT ALL ON TABLE "public"."exercise" TO "authenticated";
GRANT ALL ON TABLE "public"."exercise" TO "service_role";



GRANT ALL ON SEQUENCE "public"."exercise_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."exercise_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."exercise_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."exercise_muscle_group" TO "anon";
GRANT ALL ON TABLE "public"."exercise_muscle_group" TO "authenticated";
GRANT ALL ON TABLE "public"."exercise_muscle_group" TO "service_role";



GRANT ALL ON TABLE "public"."exercise_type" TO "anon";
GRANT ALL ON TABLE "public"."exercise_type" TO "authenticated";
GRANT ALL ON TABLE "public"."exercise_type" TO "service_role";



GRANT ALL ON TABLE "public"."muscle_group" TO "anon";
GRANT ALL ON TABLE "public"."muscle_group" TO "authenticated";
GRANT ALL ON TABLE "public"."muscle_group" TO "service_role";



GRANT ALL ON SEQUENCE "public"."exercise_type_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."exercise_type_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."exercise_type_id_seq" TO "service_role";



GRANT ALL ON SEQUENCE "public"."exercise_type_id_seq1" TO "anon";
GRANT ALL ON SEQUENCE "public"."exercise_type_id_seq1" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."exercise_type_id_seq1" TO "service_role";



GRANT ALL ON TABLE "public"."profile" TO "anon";
GRANT ALL ON TABLE "public"."profile" TO "authenticated";
GRANT ALL ON TABLE "public"."profile" TO "service_role";



GRANT ALL ON TABLE "public"."set" TO "anon";
GRANT ALL ON TABLE "public"."set" TO "authenticated";
GRANT ALL ON TABLE "public"."set" TO "service_role";



GRANT ALL ON SEQUENCE "public"."set_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."set_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."set_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."set_type" TO "anon";
GRANT ALL ON TABLE "public"."set_type" TO "authenticated";
GRANT ALL ON TABLE "public"."set_type" TO "service_role";



GRANT ALL ON SEQUENCE "public"."set_type_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."set_type_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."set_type_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."training" TO "anon";
GRANT ALL ON TABLE "public"."training" TO "authenticated";
GRANT ALL ON TABLE "public"."training" TO "service_role";



GRANT ALL ON TABLE "public"."training_exercise" TO "anon";
GRANT ALL ON TABLE "public"."training_exercise" TO "authenticated";
GRANT ALL ON TABLE "public"."training_exercise" TO "service_role";



GRANT ALL ON SEQUENCE "public"."training_exercise_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."training_exercise_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."training_exercise_id_seq" TO "service_role";



GRANT ALL ON SEQUENCE "public"."training_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."training_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."training_id_seq" TO "service_role";









ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "service_role";






























RESET ALL;
